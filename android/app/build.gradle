
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))



apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
if (getGradle().getStartParameter().getTaskRequests().toString().contains("Huawei") and !(getGradle().getStartParameter().getTaskRequests().toString().contains("Google"))) {
    println("init huawei dependencies in module")
    apply plugin: 'com.huawei.agconnect'
} else  if (getGradle().getStartParameter().getTaskRequests().toString().contains("Google") and !(getGradle().getStartParameter().getTaskRequests().toString().contains("Huawei"))){
    println("init google dependencies in module")
    apply plugin: 'com.google.gms.google-services'
}

android {
    namespace "com.example.flutter_voice_example"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    signingConfigs {

        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.assets.srcDirs += '../../assets/data'
    }

    defaultConfig {
        applicationId "com.exolve.demoapp"
        minSdkVersion 26
        compileSdkVersion 34
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "platforms"
    productFlavors {
        google {
            dimension "platforms"
            buildConfigField "String", "PLATFORM", "\"android\""
        }

        huawei {
            dimension "platforms"
            buildConfigField "String", "PLATFORM", "\"huawei\""
        }
    }

    buildTypes {
        debug {
            productFlavors.google.signingConfig signingConfigs.debug
            productFlavors.huawei.signingConfig signingConfigs.debug
        }
        release {
            productFlavors.google.signingConfig signingConfigs.release
            productFlavors.huawei.signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    googleImplementation platform('com.google.firebase:firebase-bom:31.0.3')
    googleImplementation 'com.google.firebase:firebase-messaging'
    googleImplementation 'com.google.firebase:firebase-analytics-ktx'
    huaweiImplementation 'com.huawei.hms:push:6.11.0.300'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0'
    implementation platform("org.jetbrains.kotlin:kotlin-bom:1.8.0")
}
